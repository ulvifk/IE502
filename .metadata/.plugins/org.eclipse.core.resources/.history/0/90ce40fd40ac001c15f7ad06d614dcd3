import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;

import gurobi.GRB;
import gurobi.GRBException;
import gurobi.GRBVar;

public class WriteData {
	private Network network;
	private Variables variables;
	
	public WriteData(Network network, Variables variables) throws GRBException {
		this.network = network;
		this.variables = variables;
		

		ArrayList<Node> order = new ArrayList<>();
		order.add(network.getStartingDepot());
		orderTruckRoute(order, network.getStartingDepot(), network.getEndingDepot());
		
		for(Node node : order) {
			System.out.println(node.getIndex());
		}
	}
	
	private void writeNodesToCsv() throws IOException {
		PrintWriter out = new PrintWriter(new File("C:\\IE502QGIS\\Jupyter\\Data\\Nodes.csv"));
		
		out.println("Index, X, Y, Type");
		for(Node i : this.network.getN()) {
			out.printf("%d, %f, %f, %s\n", i.getIndex(), i.getPosition().getX(), i.getPosition().getY(), i.getType());
		}
	}
	
	private void orderTruckRoute(ArrayList<Node> order, Node i, Node stop) throws GRBException {
		if(i == stop) return;
		
		Node nextNode = null;
		for(Node j : this.variables.getX().get(i).keySet()) {
			GRBVar x = this.variables.getX().get(i).get(j);
			double xValue = x.get(GRB.DoubleAttr.X);
			if(xValue > 0.8) {
				nextNode = j;
				break;
			}
		}
		order.add(nextNode);
		
		orderTruckRoute(order, nextNode, stop);
	}
}
